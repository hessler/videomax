/*  VIDEOMAX - CONTROL BAR STATUS BAR  Version: 1.8 Date:    10/18/2010 AS Lang: 3.0  Author:  Anthony Hessler (Hessler Design) Web:     www.hesslerdesign.com Email:   anthony@hesslerdesign.com  VideoMax is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. For more information about this license, visit: http://creativecommons.org/licenses/by-sa/3.0/*/package com.hd.videomax.assets {		import flash.display.*;	import flash.geom.*;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import fl.motion.Color;		public class StatusBar extends Sprite {				// Public Properties		public var statusBar:Sprite;		public var sizer:Sprite;		public var loadBar:Sprite;		public var progressBar:Sprite;		public var statusLine:Sprite;		public var scrubber:Sprite;		public var hit:Sprite;				// Private Properties		private var statusLineHit:Sprite;		private var statusLineIcon:Sprite;		private var statusLineTime:Sprite;		private var time_txt:TextField;		private var timeBG:Sprite;		private var timeFormat:TextFormat;		private var lbFillType:String = GradientType.LINEAR;		private var lbColors:Array = [0xffffff, 0xffffff];		private var lbAlphas:Array = [0.2, 0.35];		private var lbRatios:Array = [0x00, 0xFF];		private var lbMatr:Matrix = new Matrix();		private var lbSpread:String = SpreadMethod.PAD;		private var pbFillType:String = GradientType.LINEAR;		private var pbColors:Array = [0xffffff, 0xffffff];		private var pbAlphas:Array = [0.75, 0.35];		private var pbRatios:Array = [0x00, 0xFF];		private var pbMatr:Matrix = new Matrix();		private var pbSpread:String = SpreadMethod.PAD;		private var cbHex:uint = 0x000000;		private var btnHex:uint = 0xffffff;		private var tintColor:Color = new Color();						public function StatusBar():void {			init();		}								// --- Public: Tinting Functions --- //		public function tint(pCbHex:uint=0x000000, pBtnHex:uint=0xffffff):void {			cbHex = pCbHex;			btnHex = pBtnHex;			tintColor.setTint(cbHex, 1);			timeBG.transform.colorTransform = tintColor;			statusLineIcon.transform.colorTransform = tintColor;			tintColor.setTint(btnHex, 1);			loadBar.transform.colorTransform = tintColor;			progressBar.transform.colorTransform = tintColor;			time_txt.transform.colorTransform = tintColor;		}								// --- Public: Time Functions --- //		public function setTime(t:Number):void {			time_txt.text = formatTime(t);			time_txt.setTextFormat(timeFormat);		}		public function formatTime(t:Number):String {			var s:Number = Math.round(t);			var m:Number = 0;			if (s > 0) {				while (s > 59) {					m++;					s -= 60;				}				return String((m < 10 ? "0" : "") + m + ":" + (s < 10 ? "0" : "") + s);			} else {				return "00:00";			}		}								// --- Private: Initialization Functions --- //		private function init():void {			statusBar = new Sprite();			createTextFormats();			createSizer();			createLoadBar();			createProgressBar();			createStatusLine();			createScrubber();			createHit();			addChild(statusBar);		}								// --- Private: Creation Functions --- //		private function createTextFormats():void {			timeFormat = new TextFormat();			timeFormat.font = "Verdana";			timeFormat.size = 10;			timeFormat.color = 0xffffff;			timeFormat.align = TextFormatAlign.CENTER;		}		private function createSizer():void {			sizer = new Sprite();			sizer.graphics.beginFill(0x000000, 1);			sizer.graphics.drawRect(0, 0, 18, 12);			sizer.graphics.endFill();			sizer.alpha = 0.35;			statusBar.addChild(sizer);			sizer.x = 0;			sizer.y = 9;		}		private function createLoadBar():void {			loadBar = new Sprite();			lbMatr.createGradientBox(18, 12, Math.PI/2, 0, 0);			loadBar.graphics.beginGradientFill(lbFillType, lbColors, lbAlphas, lbRatios, lbMatr, lbSpread);			loadBar.graphics.drawRect(0, 0, 18, 12);			loadBar.graphics.endFill();			statusBar.addChild(loadBar);			loadBar.x = 0;			loadBar.y = 9;		}		private function createProgressBar():void {			progressBar = new Sprite();			pbMatr.createGradientBox(1, 12, Math.PI/2, 0, 0);			progressBar.graphics.beginGradientFill(pbFillType, pbColors, pbAlphas, pbRatios, pbMatr, pbSpread);			progressBar.graphics.drawRect(0, 0, 1, 12);			progressBar.graphics.endFill();			statusBar.addChild(progressBar);			progressBar.x = 0;			progressBar.y = 9;		}		private function createStatusLine():void {			statusLine = new Sprite();			createStatusLineIcon();			createStatusLineHit();			createStatusLineTime();			statusBar.addChild(statusLine);		}		private function createStatusLineIcon():void {			statusLineIcon = new Sprite();			statusLineIcon.graphics.beginFill(0x000000, 1);			statusLineIcon.graphics.drawRect(0, 0, 1, 20);			statusLineIcon.graphics.endFill();			statusLine.addChild(statusLineIcon);			statusLineIcon.alpha = 0.5;			statusLineIcon.x = 0;			statusLineIcon.y = 1;		}		private function createStatusLineHit():void {			statusLineHit = new Sprite();			statusLineHit.graphics.beginFill(0x000000, 0);			statusLineHit.graphics.drawRect(0, 0, 20, 30);			statusLineHit.graphics.endFill();			statusLine.addChild(statusLineHit);			statusLineHit.x = -10;			statusLineHit.y = -5;		}		private function createStatusLineTime():void {			statusLineTime = new Sprite();			time_txt = new TextField();			timeBG = new Sprite();						var bg:Sprite = new Sprite();			var stroke:Sprite = new Sprite();						bg.graphics.beginFill(0x000000, 1);			bg.graphics.drawRect(0, 0, 54, 20);			bg.graphics.endFill();			bg.alpha = 0.65;						stroke.graphics.beginFill(0xffffff, 0.5);			stroke.graphics.moveTo(0, 0);			stroke.graphics.lineTo(54, 0);			stroke.graphics.lineTo(54, 20);			stroke.graphics.lineTo(53, 20);			stroke.graphics.lineTo(53, 1);			stroke.graphics.lineTo(1, 1);			stroke.graphics.lineTo(1, 20);			stroke.graphics.lineTo(0, 20);			stroke.graphics.lineTo(0, 0);			stroke.graphics.endFill();			stroke.alpha = 0.25;						time_txt.width = 53;			time_txt.height = 16;			time_txt.text = "00:00";			time_txt.setTextFormat(timeFormat);			time_txt.selectable = false;						timeBG.addChild(bg);			timeBG.addChild(stroke);			statusLineTime.addChild(timeBG);			statusLineTime.addChild(time_txt);			statusLine.addChild(statusLineTime);			statusLineTime.x = -26;			statusLineTime.y = -20;			time_txt.y = 3;		}		private function createScrubber():void {			scrubber = new Sprite();			var icon:Sprite = new Sprite();			var hit:Sprite = new Sprite();						icon.graphics.beginFill(0x000000, 1);			icon.graphics.drawRect(0, 0, 1, 12);			icon.graphics.endFill();			icon.alpha = 0.2;						hit.graphics.beginFill(0x000000, 0);			hit.graphics.drawRect(0, 0, 20, 30);			hit.graphics.endFill();						scrubber.addChild(icon);			scrubber.addChild(hit);			icon.x = 0;			icon.y = 9;			hit.x = -10;			hit.y = 0;						statusBar.addChild(scrubber);		}		private function createHit():void {			hit = new Sprite();			hit.graphics.beginFill(0x000000, 0);			hit.graphics.drawRect(0, 0, 18, 12);			hit.graphics.endFill();			statusBar.addChild(hit);			hit.x = 0;			hit.y = 9;		}			}	}