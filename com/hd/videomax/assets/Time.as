/*  VIDEOMAX - TIME  Version: 1.8 Date:    10/18/2010 AS Lang: 3.0  Author:  Anthony Hessler (Hessler Design) Web:     www.hesslerdesign.com Email:   anthony@hesslerdesign.com  VideoMax is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. For more information about this license, visit: http://creativecommons.org/licenses/by-sa/3.0/*/package com.hd.videomax.assets {		import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;		public class Time extends Sprite {				// Private Properties		private var time:Sprite;		private var timeComponents:Sprite;		private var duration_txt:TextField;		private var elapsed_txt:TextField;		private var divider_txt:TextField;		private var hit:Sprite;		private var dividerFormat:TextFormat;		private var durationFormat:TextFormat;		private var elapsedFormat:TextFormat;						public function Time():void {			init();		}								// --- Public: Time Functions --- //		public function updateElapsed(pTime_num:Number):void {			elapsed_txt.text = "" + formatTime(pTime_num);			elapsed_txt.setTextFormat(elapsedFormat);		}		public function updateDuration(pTime_num:Number):void {			duration_txt.text = "" + formatTime(pTime_num);			duration_txt.setTextFormat(durationFormat);		}		public function formatTime(t:Number):String {			var s:Number = Math.round(t);			var m:Number = 0;			if (s > 0) {				while (s > 59) {					m++;					s -= 60;				}				return String((m < 10 ? "0" : "") + m + ":" + (s < 10 ? "0" : "") + s);			} else {				return "00:00";			}		}								// --- Public: Get/Set Functions --- //		public function setWidth(pSize_num:Number):void {			hit.width = pSize_num;			timeComponents.x = Math.ceil((pSize_num/2) - (timeComponents.width/2));		}				public function setHeight(pSize_num:Number):void {			hit.height = pSize_num;			divider_txt.y = duration_txt.y = elapsed_txt.y = Math.round((pSize_num/2) - (divider_txt.height/2) - 1);		}								// --- Private: Initialization Functions --- //		private function init():void {			time = new Sprite();			timeComponents = new Sprite();			createTextFormats();			createTextFields();			createHit();			setWidth(95);			setHeight(30);			addChild(time);		}								// --- Private: Creation Functions --- //		private function createTextFormats():void {			dividerFormat = new TextFormat();			durationFormat = new TextFormat();			elapsedFormat = new TextFormat();						dividerFormat.font = durationFormat.font = elapsedFormat.font = "Verdana";			dividerFormat.size = durationFormat.size = elapsedFormat.size = 10;			dividerFormat.color = durationFormat.color = elapsedFormat.color = 0xffffff;			dividerFormat.align = TextFormatAlign.CENTER;			durationFormat.align = TextFormatAlign.LEFT;			elapsedFormat.align = TextFormatAlign.RIGHT;		}		private function createTextFields():void {			duration_txt = new TextField();			elapsed_txt = new TextField();			divider_txt = new TextField();						duration_txt.width = elapsed_txt.width = 40;			divider_txt.width = 11;						divider_txt.text = "/";			duration_txt.text = elapsed_txt.text = "00:00";						divider_txt.setTextFormat(dividerFormat);			duration_txt.setTextFormat(durationFormat);			elapsed_txt.setTextFormat(elapsedFormat);						elapsed_txt.x = 0;			duration_txt.x = 44;			divider_txt.x = 36;						divider_txt.height = duration_txt.height = elapsed_txt.height = divider_txt.textHeight + 3;						timeComponents.addChild(divider_txt);			timeComponents.addChild(duration_txt);			timeComponents.addChild(elapsed_txt);			time.addChild(timeComponents);		}		private function createHit():void {			hit = new Sprite();			hit.graphics.beginFill(0xffffff, 0);			hit.graphics.drawRect(0, 0, 95, 30);			hit.graphics.endFill();			time.addChild(hit);		}			}	}