/*  VIDEOMAX - CONTROL BAR PAUSE BUTTON  Version: 1.8 Date:    10/18/2010 AS Lang: 3.0  Author:  Anthony Hessler (Hessler Design) Web:     www.hesslerdesign.com Email:   anthony@hesslerdesign.com  VideoMax is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. For more information about this license, visit: http://creativecommons.org/licenses/by-sa/3.0/*/package com.hd.videomax.assets {		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.filters.GlowFilter;		public class PauseButton extends Sprite {				// Private Properties		private var btn:Sprite;		private var icon:Sprite;		private var hit:Sprite;		private var glowFilter:GlowFilter = new GlowFilter(0xffffff, 0.45, 5, 5, 2, 3);		private var filters_arr:Array = [glowFilter];						public function PauseButton():void {			init();		}								// --- Public: Enable/Disable Functions --- //		public function enable(pWhatWay_bol:Boolean=true):void {			btn.buttonMode = pWhatWay_bol;			btn.useHandCursor = pWhatWay_bol;			if (pWhatWay_bol) {				btn.addEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				btn.addEventListener(MouseEvent.MOUSE_OUT, onBtnOut);				btn.addEventListener(MouseEvent.MOUSE_DOWN, onBtnDown);				btn.addEventListener(MouseEvent.MOUSE_UP, onBtnUp);			} else {				btn.removeEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				btn.removeEventListener(MouseEvent.MOUSE_OUT, onBtnOut);				btn.removeEventListener(MouseEvent.MOUSE_DOWN, onBtnDown);				btn.removeEventListener(MouseEvent.MOUSE_UP, onBtnUp);			}		}								// --- Public: Get/Set Functions --- //		public function setWidth(pSize_num:Number):void {			hit.width = pSize_num;			icon.x = Math.floor((pSize_num/2) - (icon.width/2));		}		public function setHeight(pSize_num:Number):void {			hit.height = pSize_num;			icon.y = Math.ceil((pSize_num/2) - (icon.height/2));		}								// --- Private: Initialization Functions --- //		private function init():void {			btn = new Sprite();			drawIcon();			drawHit();			setWidth(30);			setHeight(30);			onBtnOut(null);			addChild(btn);		}								// --- Private: Drawing Functions --- //		private function drawIcon():void {			icon = new Sprite();			var shape1:Sprite = new Sprite();			var shape2:Sprite = new Sprite();			shape1.graphics.beginFill(0xffffff, 1);			shape1.graphics.drawRect(0, 0, 3, 12);			shape1.graphics.endFill();			shape2.graphics.beginFill(0xffffff, 1);			shape2.graphics.drawRect(0, 0, 3, 12);			shape2.graphics.endFill();			shape1.x = 0;			shape2.x = shape1.x + (shape1.width*2);			icon.addChild(shape1);			icon.addChild(shape2);			btn.addChildAt(icon, 0);		}		private function drawHit():void {			hit = new Sprite();			hit.graphics.beginFill(0xffffff, 1);			hit.graphics.drawRect(0, 0, 30, 30);			hit.graphics.endFill();			hit.alpha = 0;			btn.addChildAt(hit, 1);		}								// --- Private: Event Handler Functions --- //		private function onBtnOver(e:MouseEvent):void {			icon.alpha = 1;			icon.filters = filters_arr;		}		private function onBtnOut(e:MouseEvent):void {			icon.alpha = 0.4;			icon.filters = null;		}		private function onBtnDown(e:MouseEvent):void {			icon.alpha = 0.4;			icon.filters = filters_arr;			icon.y += 1;		}		private function onBtnUp(e:MouseEvent):void {			icon.alpha = 1;			icon.filters = filters_arr;			icon.y = Math.ceil((hit.height/2) - (icon.height/2));		}			}	}