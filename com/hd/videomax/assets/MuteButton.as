/*  VIDEOMAX - CONTROL BAR MUTE BUTTON  Version: 1.8 Date:    10/18/2010 AS Lang: 3.0  Author:  Anthony Hessler (Hessler Design) Web:     www.hesslerdesign.com Email:   anthony@hesslerdesign.com  VideoMax is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. For more information about this license, visit: http://creativecommons.org/licenses/by-sa/3.0/*/package com.hd.videomax.assets {		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.filters.GlowFilter;		public class MuteButton extends Sprite {				// Private Properties		private var btn:Sprite;		private var icon:Sprite;		private var horn:Sprite;		private var rings:Sprite;		private var hit:Sprite;		private var glowFilter:GlowFilter = new GlowFilter(0xffffff, 0.45, 5, 5, 2, 3);		private var filters_arr:Array = [glowFilter];						public function MuteButton():void {			init();		}								// --- Public: Enable/Disable Functions --- //		public function enable(pWhatWay_bol:Boolean=true):void {			btn.buttonMode = pWhatWay_bol;			btn.useHandCursor = pWhatWay_bol;			if (pWhatWay_bol) {				btn.addEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				btn.addEventListener(MouseEvent.MOUSE_OUT, onBtnOut);				btn.addEventListener(MouseEvent.MOUSE_DOWN, onBtnDown);				btn.addEventListener(MouseEvent.MOUSE_UP, onBtnUp);			} else {				btn.removeEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				btn.removeEventListener(MouseEvent.MOUSE_OUT, onBtnOut);				btn.removeEventListener(MouseEvent.MOUSE_DOWN, onBtnDown);				btn.removeEventListener(MouseEvent.MOUSE_UP, onBtnUp);			}		}								// --- Public: Mute/Unmute Functions --- //		public function mute(pWhatWay_bol:Boolean=true):void {			if (pWhatWay_bol) {				rings.visible = false;			} else {				rings.visible = true;			}		}								// --- Public: Get/Set Functions --- //		public function setWidth(pSize_num:Number):void {			hit.width = pSize_num;			icon.x = Math.floor((pSize_num/2) - (icon.width/2));		}		public function setHeight(pSize_num:Number):void {			hit.height = pSize_num;			icon.y = Math.ceil((pSize_num/2) - (icon.height/2));		}								// --- Private: Initialization Functions --- //		private function init():void {			btn = new Sprite();			drawIcon();			drawHit();			setWidth(36);			setHeight(30);			onBtnOut(null);			addChild(btn);		}								// --- Private: Drawing Functions --- //		private function drawIcon():void {			icon = new Sprite();			rings = new Sprite();			horn = new Sprite();						horn.graphics.beginFill(0xffffff, 1);			horn.graphics.moveTo(0, 2);			horn.graphics.lineTo(0, 2);			horn.graphics.lineTo(2, 2);			horn.graphics.lineTo(5, 0);			horn.graphics.lineTo(5, 8);			horn.graphics.lineTo(2, 6);			horn.graphics.lineTo(0, 6);			horn.graphics.lineTo(0, 2);			horn.graphics.endFill();						var arc1:Sprite = new Sprite();			arc1.graphics.beginFill(0xffffff, 1);			arc1.graphics.moveTo(0, 0);			arc1.graphics.lineTo(0, 0);			arc1.graphics.lineTo(0, 0.35);			arc1.graphics.curveTo(1.2, 0.8, 1.35, 2.5);			arc1.graphics.curveTo(1.35, 3.45, 0.35, 5);			arc1.graphics.lineTo(0, 5);			arc1.graphics.curveTo(0.9, 3.8, 0.85, 2.5);			arc1.graphics.curveTo(0.85, 1.35, 0, 0);			arc1.graphics.endFill();						var arc2:Sprite = new Sprite();			arc2.graphics.beginFill(0xffffff, 1);			arc2.graphics.moveTo(0, 0);			arc2.graphics.lineTo(0, 0);			arc2.graphics.lineTo(0, 0.525);			arc2.graphics.curveTo(1.8, 1.2, 2.025, 3.75);			arc2.graphics.curveTo(2.025, 5.175, 0.525, 7.5);			arc2.graphics.lineTo(0, 7.5);			arc2.graphics.curveTo(1.35, 5.7, 1.275, 3.75);			arc2.graphics.curveTo(1.275, 2.025, 0, 0);			arc2.graphics.endFill();						var arc3:Sprite = new Sprite();			arc3.graphics.beginFill(0xffffff, 1);			arc3.graphics.moveTo(0, 0);			arc3.graphics.lineTo(0, 0);			arc3.graphics.lineTo(0, 0.7);			arc3.graphics.curveTo(2.4, 1.6, 2.7, 5);			arc3.graphics.curveTo(2.7, 6.9, 0.7, 10);			arc3.graphics.lineTo(0, 10);			arc3.graphics.curveTo(1.8, 7.4, 1.7, 5);			arc3.graphics.curveTo(1.7, 2.7, 0, 0);			arc3.graphics.endFill();						rings.addChild(arc1);			rings.addChild(arc2);			rings.addChild(arc3);			arc1.x = 0;			arc1.y = 2.5;			arc2.x = 2.5;			arc2.y = 1.25;			arc3.x = 5;			arc3.y = 0;						icon.addChild(horn);			horn.y = 1;			icon.addChild(rings);			rings.x = 8;			rings.y = 0;			btn.addChildAt(icon, 0);		}		private function drawHit():void {			hit = new Sprite();			hit.graphics.beginFill(0xffffff, 1);			hit.graphics.drawRect(0, 0, 30, 30);			hit.graphics.endFill();			hit.alpha = 0;			btn.addChildAt(hit, 1);		}								// --- Private: Event Handler Functions --- //		private function onBtnOver(e:MouseEvent):void {			icon.alpha = 1;			icon.filters = filters_arr;		}		private function onBtnOut(e:MouseEvent):void {			icon.alpha = 0.4;			icon.filters = null;		}		private function onBtnDown(e:MouseEvent):void {			icon.alpha = 0.4;			icon.filters = filters_arr;			icon.y += 1;		}		private function onBtnUp(e:MouseEvent):void {			icon.alpha = 1;			icon.filters = filters_arr;			icon.y = Math.ceil((hit.height/2) - (icon.height/2));		}			}	}