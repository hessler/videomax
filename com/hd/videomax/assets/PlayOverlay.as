/*  VIDEOMAX - PLAY OVERLAY  Version: 1.8 Date:    10/18/2010 AS Lang: 3.0  Author:  Anthony Hessler (Hessler Design) Web:     www.hesslerdesign.com Email:   anthony@hesslerdesign.com  VideoMax is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License. For more information about this license, visit: http://creativecommons.org/licenses/by-sa/3.0/*/package com.hd.videomax.assets {		import flash.display.*;	import flash.events.MouseEvent;	import flash.filters.DropShadowFilter;	import flash.geom.*;		public class PlayOverlay extends Sprite {				// Private Properties		private var po:Sprite;		private var hit:Sprite;		private var btn:Sprite;		private var rect:Sprite;		private var arrow:Sprite;		private var bw_num:Number = 640;		private var bh_num:Number = 480;		private var fillType:String = GradientType.LINEAR;		private var colors:Array = [0xFFFFFF, 0xFFFFFF];		private var alphas:Array = [0.60, 0.90];		private var ratios:Array = [0x00, 0xFF];		private var matr:Matrix = new Matrix();		private var spread:String = SpreadMethod.PAD;		private var ds:DropShadowFilter = new DropShadowFilter(0, 0, 0x000000, 1, 6, 6, 2, 3);		private var filters_arr:Array = [ds];				public function PlayOverlay(pw_num:Number=640, ph_num:Number=480):void {			bw_num = pw_num;			bh_num = ph_num;			init();		}				// --- Public: Get/Set Functions --- //		public function setSize(pw_num:Number=640, ph_num:Number=480):void {			bw_num = pw_num;			bh_num = ph_num;			hit.width = bw_num;			hit.height = bh_num;			if ((bw_num * 0.75) <= bh_num) {				btn.width = Math.round(bw_num/6);			} else {				btn.width = Math.round(bh_num/4);			}			btn.height = Math.round(btn.width * 0.75);			btn.x = Math.round((hit.width/2) - (btn.width/2));			btn.y = Math.round((hit.height/2) - (btn.height/2));		}								// --- Private: Initialization --- //		private function init():void {			po = new Sprite();			createHit();			drawButton();			addButtonListeners();			onBtnOut(null);			addChild(po);		}								// --- Private: Create Functions --- //		private function createHit():void {			hit = new Sprite();			hit.graphics.beginFill(0xffffff, 0);			hit.graphics.drawRect(0, 0, bw_num, bh_num);			hit.graphics.endFill();			po.addChild(hit);		}		private function drawButton():void {			btn = new Sprite();			rect = new Sprite();			arrow = new Sprite();			var lw_num:Number = Math.round(bw_num/6);			var lh_num:Number = lw_num * (3/4);			matr.createGradientBox(lw_num, lh_num, Math.PI/2, 0, 0);			rect.graphics.beginGradientFill(fillType, colors, alphas, ratios, matr, spread);			rect.graphics.drawRect(0, 0, lw_num, lh_num);			rect.graphics.endFill();			rect.filters = filters_arr;						arrow.graphics.beginFill(0x1c1c1c, 1);			arrow.graphics.moveTo(0, 0);			arrow.graphics.lineTo(0, 0);			arrow.graphics.lineTo((lw_num/3), (lh_num/3));			arrow.graphics.lineTo(0, (lh_num/1.5));			arrow.graphics.lineTo(0, 0);			arrow.graphics.endFill();						btn.addChild(rect);			btn.addChild(arrow);			rect.alpha = 0.75;			arrow.alpha = 1;			arrow.x = Math.ceil((rect.width/2) - (arrow.width/2));			arrow.y = Math.ceil((rect.height/2) - (arrow.height/2));						po.addChild(btn);			btn.x = Math.round((hit.width/2) - (btn.width/2));			btn.y = Math.round((hit.height/2) - (btn.height/2));		}								// --- Private: Add/Remove Listeners --- //		private function addButtonListeners(pWhatWay_bol:Boolean=true):void {			po.buttonMode = pWhatWay_bol;			po.useHandCursor = pWhatWay_bol;			if (pWhatWay_bol) {				po.addEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				po.addEventListener(MouseEvent.MOUSE_OUT, onBtnOut);			} else {				po.removeEventListener(MouseEvent.MOUSE_OVER, onBtnOver);				po.removeEventListener(MouseEvent.MOUSE_OUT, onBtnOut);			}		}								// --- Private: Event Handlers --- //		private function onBtnOver(e:MouseEvent):void {			btn.alpha = 1;			rect.alpha = 1;		}		private function onBtnOut(e:MouseEvent):void {			btn.alpha = 0.80;			rect.alpha = 0.75;		}			}	}